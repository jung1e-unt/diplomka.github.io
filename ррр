<style>
    #customAlertOverlay {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100vw;
        height: 100vh;
        background-color: rgba(0, 0, 0, 0.6);
        z-index: 9999;
        justify-content: center;
        align-items: center;
    }

    .customAlertBox {
        background-color: #fff;
        color: #333;
        padding: 30px;
        border-radius: 10px;
        text-align: center;
        box-shadow: 0 0 20px rgba(0,0,0,0.5);
        /* max-width: 400px; */
        width: 600px;
        height: 200px;
        font-family: sans-serif;
    }

    .customAlertCloseButton {
        margin-top: 20px;
        padding: 10px 20px;
        background-color: #007bff;
        color: white;
        border: none;
        border-radius: 5px;
        cursor: pointer;
    }

        .customAlertCloseButton:hover {
            background-color: #0056b3;
        }

    .customSaveButton,
    .customDeleteButton {
        background: none;
        border: none;
        cursor: pointer;
    }

    .customSaveIcon,
    .customDeleteIcon {
        width: 24px;
        height: 24px;
    }
</style>



<div id="passwordModal_admin" class="modal">
    <div class="modal-dialog">
        <div class="modal-content">
            <form id="changePasswordForm">
                <h3>–°–º–µ–Ω–∞ –ø–∞—Ä–æ–ª—è</h3>

                <input id="tabelNum" value="@ViewBag.Tabel" style="display: none;" /><br>

                <div class="labelpass">
                    <label class="labelpasslabel">–ù–æ–≤—ã–π –ø–∞—Ä–æ–ª—å</label>
                    <input class="labelpassinput" type="password" id="newPassword" /><br>
                    <label class="labelpasslabel">–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –Ω–æ–≤—ã–π –ø–∞—Ä–æ–ª—å</label>
                    <input class="labelpassinput" type="password" id="confirmPassword" /><br>
                </div>

                <p id="errorMessage" style="color: red; display: none;">–ü–∞—Ä–æ–ª–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç</p>

                <button type="submit" id="savePasswordBtn">–°–æ—Ö—Ä–∞–Ω–∏—Ç—å</button>
            </form>
            <button id="cancelBtn">–û—Ç–º–µ–Ω–∞</button>
        </div>
    </div>
</div>

<!-- üî∏ Custom Alert Modal -->
<div id="customAlert" class="modal">
    <div class="modal-dialog">
        <div class="modal-content alert-box">
            <div id="customAlertIcon" class="alert-icon">‚ÑπÔ∏è</div>
            <h3 id="customAlertTitle"></h3>
            <p id="customAlertMessage"></p>
            <button id="customAlertCloseBtn">–û–ö</button>
        </div>
    </div>
</div>

<style>
    /* –û–±—â–∏–µ —Å—Ç–∏–ª–∏ –¥–ª—è –º–æ–¥–∞–ª–∫–∏ —Å–º–µ–Ω—ã –ø–∞—Ä–æ–ª—è */
    .labelpass {
        text-align: center;
        line-height: 25px;
    }

    .labelpass label {
        align-self: center;
    }

    .labelpass input {
        float: inline-end;
    }

    /* üîπ Custom Alert Modal */
    #customAlert {
        display: none;
        position: fixed;
        z-index: 9999;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0,0,0,0.6);
        justify-content: center;
        align-items: center;
    }

    #customAlert .modal-dialog {
        position: relative;
        margin: 10% auto;
        max-width: 400px;
    }

    .alert-box {
        text-align: center;
        background: white;
        border-radius: 10px;
        padding: 25px;
        box-shadow: 0 4px 12px rgba(0,0,0,0.3);
        animation: fadeIn 0.3s ease;
    }

    .alert-icon {
        font-size: 40px;
        margin-bottom: 10px;
    }

    #customAlertCloseBtn {
        margin-top: 15px;
        padding: 8px 18px;
        border: none;
        border-radius: 6px;
        background: #007bff;
        color: white;
        cursor: pointer;
        transition: background 0.2s;
    }

    #customAlertCloseBtn:hover {
        background: #0056b3;
    }

    @keyframes fadeIn {
        from { opacity: 0; transform: scale(0.95); }
        to { opacity: 1; transform: scale(1); }
    }
</style>

<script>
    const modal_passw = document.getElementById("passwordModal_admin");
    const openBtn = document.getElementById("parol");
    const closeBtn = document.querySelector(".close");
    const cancelBtn = document.getElementById("cancelBtn");

    if (openBtn) openBtn.onclick = () => modal_passw.style.display = "block";
    if (closeBtn) closeBtn.onclick = () => modal_passw.style.display = "none";
    cancelBtn.onclick = () => modal_passw.style.display = "none";

    // üî∏ –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–ø–æ–≤–µ—â–µ–Ω–∏—è
    function showCustomAlert(type, message, callback) {
        const alertModal = document.getElementById("customAlert");
        const alertTitle = document.getElementById("customAlertTitle");
        const alertMessage = document.getElementById("customAlertMessage");
        const alertIcon = document.getElementById("customAlertIcon");
        const alertCloseBtn = document.getElementById("customAlertCloseBtn");

        // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤
        if (type === "success") {
            alertTitle.textContent = "‚úÖ –£—Å–ø–µ—à–Ω–æ";
            alertIcon.textContent = "‚úÖ";
            alertTitle.style.color = "green";
        } else if (type === "error") {
            alertTitle.textContent = "‚ùå –û—à–∏–±–∫–∞";
            alertIcon.textContent = "‚ùå";
            alertTitle.style.color = "red";
        } else {
            alertTitle.textContent = "‚ÑπÔ∏è –°–æ–æ–±—â–µ–Ω–∏–µ";
            alertIcon.textContent = "‚ÑπÔ∏è";
            alertTitle.style.color = "black";
        }

        alertMessage.textContent = message;
        alertModal.style.display = "flex";

        alertCloseBtn.onclick = () => {
            alertModal.style.display = "none";
            if (callback) callback();
        };
    }

    document.addEventListener("DOMContentLoaded", function () {
        const saveBtn = document.getElementById("savePasswordBtn");
        const newPassword = document.getElementById("newPassword");
        const confirmPassword = document.getElementById("confirmPassword");
        const tabelNum = document.getElementById("tabelNum");
        const errorMessage = document.getElementById("errorMessage");
        const role = document.body.getAttribute("data-role");

        if (role !== "admin") {
            tabelNum.setAttribute("readonly", true);
        }

        saveBtn.addEventListener("click", function (e) {
            e.preventDefault();

            const newVal = newPassword.value.trim();
            const confirmVal = confirmPassword.value.trim();
            const tabelVal = tabelNum.value.trim();

            if (!newVal || !confirmVal) {
                showCustomAlert("error", "–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è");
                return;
            }

            if (newVal !== confirmVal) {
                showCustomAlert("error", "–ü–∞—Ä–æ–ª–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç");
                return;
            }

            const url = "@Url.Action("ChangePass", "Home")";
            fetch(url, {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    tabelNum: tabelVal,
                    newPassword: newVal
                })
            })
            .then(async response => {
                const data = await response.json();
                if (!response.ok || !data.success) {
                    throw new Error(data.message || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞");
                }

                showCustomAlert("success", data.message, () => {
                    modal_passw.style.display = "none";
                });
            })
            .catch(error => {
                showCustomAlert("error", error.message);
            });
        });

        confirmPassword.addEventListener("input", function () {
            if (newPassword.value.trim() === confirmPassword.value.trim()) {
                errorMessage.style.display = "none";
            }
        });
    });
</script>
